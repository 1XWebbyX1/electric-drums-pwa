{"version":3,"sources":["components/Svg.js","components/DrumPad.js","data/drumPadsData.js","components/PadStore.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Svg","react_default","a","createElement","xmlns","height","viewBox","width","d","fill","React","Component","DrumPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","handleKeyPress","bind","assertThisInitialized","handleClick","document","addEventListener","$","text","removeEventListener","e","keyCode","audio","getElementById","currentTime","play","str","addClass","setTimeout","removeClass","animate","opacity","display","className","onClick","src","obj","key","PadStore","padStore","store","map","components_DrumPad","color","class","Wrapper","components_Svg","components_PadStore","App","components_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1de1a05a.chunk.js","sourcesContent":["import React from 'react'\n\nclass Svg extends React.Component{\n  render(){\n    return(\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"200px\" viewBox=\"-8 0 512 512.00015\" width=\"200px\"><path d=\"m102.226562 461.925781 49.648438-103.199219h-99.300781zm0 0\" fill=\"#717582\"/><path d=\"m248.347656 461.394531 48.484375-102.667969h-96.972656zm0 0\" fill=\"#717582\"/><path d=\"m394.46875 461.929688 49.648438-103.203126h-99.300782zm0 0\" fill=\"#717582\"/><path d=\"m380.820312 503.421875-59.964843-124.644531-58.816407 124.546875c-2.5 5.296875-7.835937 8.675781-13.691406 8.675781-5.859375 0-11.191406-3.378906-13.691406-8.675781l-58.820312-124.546875-59.964844 124.644531c-2.523438 5.242187-7.828125 8.578125-13.644532 8.578125-5.820312 0-11.125-3.335938-13.648437-8.578125l-69.609375-144.695313h-5.625v138.128907c0 8.363281 6.78125 15.144531 15.140625 15.144531h365.984375c-5.820312 0-11.125-3.335938-13.648438-8.578125zm0 0\" fill=\"#333436\"/><path d=\"m408.113281 503.421875c-2.523437 5.242187-7.828125 8.578125-13.648437 8.578125h73.742187c8.363281 0 15.140625-6.78125 15.140625-15.144531v-138.128907h-5.621094zm0 0\" fill=\"#333436\"/><path d=\"m408.148438 165.582031 86.351562-142.59375c4.332031-7.152343 2.042969-16.460937-5.109375-20.796875-7.15625-4.332031-16.46875-2.042968-20.796875 5.109375l-86.367188 142.613281c4.757813 1.734376 9.355469 3.925782 13.726563 6.570313 4.398437 2.664063 8.472656 5.714844 12.195313 9.097656zm0 0\" fill=\"#18181A\"/><path d=\"m396.371094 247.964844c6.609375-10.910156 8.570312-23.738282 5.527344-36.125-3.042969-12.382813-10.726563-22.84375-21.632813-29.449219-7.464844-4.519531-16.007813-6.910156-24.703125-6.910156-16.613281 0-32.273438 8.820312-40.871094 23.015625-6.605468 10.910156-8.570312 23.738281-5.527344 36.125 3.042969 12.382812 10.726563 22.84375 21.632813 29.449218 7.46875 4.519532 16.007813 6.910157 24.703125 6.910157 16.613281 0 32.273438-8.820313 40.871094-23.015625zm0 0\" fill=\"#18181A\"/><path d=\"m114.464844 149.914062-86.367188-142.613281c-4.328125-7.152343-13.640625-9.441406-20.796875-5.109375-7.152343 4.335938-9.441406 13.644532-5.109375 20.796875l86.351563 142.59375c3.722656-3.382812 7.796875-6.433593 12.195312-9.097656 4.371094-2.644531 8.972657-4.835937 13.726563-6.570313zm0 0\" fill=\"#18181A\"/><path d=\"m187.527344 234.621094c3.042968-12.386719 1.078125-25.214844-5.527344-36.121094-8.597656-14.199219-24.257812-23.019531-40.871094-23.019531-8.695312 0-17.238281 2.390625-24.703125 6.910156-10.90625 6.605469-18.589843 17.066406-21.632812 29.453125-3.042969 12.382812-1.082031 25.210938 5.527343 36.121094 8.597657 14.195312 24.257813 23.015625 40.871094 23.015625 8.695313 0 17.234375-2.386719 24.699219-6.90625 10.910156-6.609375 18.59375-17.070313 21.636719-29.453125zm0 0\" fill=\"#18181A\"/><path d=\"m483.351562 328.441406v-28.480468c0-8.363282-6.78125-15.144532-15.144531-15.144532h-439.722656c-8.363281 0-15.140625 6.78125-15.140625 15.144532v28.480468zm0 0\" fill=\"#000d33\"/></svg>\n\n    );\n  }\n}\n\nexport default Svg;\n","import React from 'react'\nimport $ from 'jquery';\n\n\nclass DrumPad extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      id: ''\n    }\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //adding event listener _______________________________________\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n    $('.display-text').text('Electric Drums')\n  }\n  //-------------------------------------------------------------\n\n  //removing event listener________________________________________\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  //-----------------------------------------------------------------\n\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n     this.handleClick();\n    }\n  }\n\n  handleClick() {\n     //playing audio for a key\n     const audio = document.getElementById(this.props.id);\n      audio.currentTime = 0;\n      audio.play();\n     //----------------------\n\n      //adding animation for current pressed key\n      var str = 'div-' + this.props.id;\n      $('#' + str).addClass('float');\n      setTimeout(function() {\n        $('#' + str).removeClass('float');\n      }, 1000);\n      //--------------------------------------\n\n\n      //animations for display text\n      $('.display-text').animate(\n      { opacity: 0.5 },\n      100,\n      function() {\n       $('.display-text').animate({ opacity: 1}, 100);\n    }\n  );\n       $('.display-text').text(this.props.display);\n       //--------------------------------\n  }\n\n\n  render() {\n    return(\n      <div id={'div-' + this.props.id} className=\"drum-pad\" onClick={this.handleClick}>\n        <h3 id={'h3-' + this.props.id}>{this.props.text}</h3>\n        <audio id={this.props.id} className=\"clip\" src={this.props.src}></audio>\n      </div>\n    )\n  }\n}\n\nexport default DrumPad;\n","const obj = [\n  {key: 'Q', keyCode: 81, audio: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3', text: 'Kick'},\n  {key: 'W', keyCode: 87, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3', text: 'Brk '},\n  {key: 'E', keyCode: 69, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3', text: 'Cev'},\n  {key: 'A', keyCode: 65, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3', text: 'Bld'},\n  {key: 'S', keyCode: 83, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3', text: 'Heater-3'},\n  {key: 'D', keyCode: 68, audio: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3', text: 'Side Stick '},\n  {key: 'Z', keyCode: 90, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3', text: \"Heater-4\"},\n  {key: 'X', keyCode: 88, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3', text: 'Heater-2'},\n  {key: 'C', keyCode: 67, audio: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3', text: 'Heater-1'}\n];\n\nexport default obj;\n","import React from 'react'\nimport DrumPad from './DrumPad';\nimport store from '../data/drumPadsData'\n\n\nclass PadStore extends React.Component {\n  render() {\n      var padStore = store.map( a =>\n         <DrumPad id={a.key} text={a.key} src={a.audio} keyCode={a.keyCode} color={a.color} display={a.text}/>\n    );\n\n    return (\n        <div class=\"pad-store\">\n           {padStore}\n      </div>\n    );\n  }\n}\n\nexport default PadStore;\n","import React from 'react'\nimport Svg from './Svg'\nimport PadStore from './PadStore'\n\nclass Wrapper extends React.Component{\n  render(){\n    return(\n      <div id='wrapper'>\n        <Svg />\n        <h3 class='display-text'></h3>\n        <PadStore />\n      </div>\n    )\n  }\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport Wrapper from './components/Wrapper';\nimport './App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'babel-polyfill';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}